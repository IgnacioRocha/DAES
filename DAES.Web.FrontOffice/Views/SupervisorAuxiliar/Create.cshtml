@model DAES.Model.SistemaIntegrado.SupervisorAuxiliar

<div class="jumbotron">
    <div class="container">
        <h1 class="display-4">Registro de Supervisores Auxiliares</h1>
        <p class="lead">
            En esta sección se encuentran los trámites correspondientes para la acreditación de las entidades que presten servicios de supervisión auxiliar y para que anualmente puedan informar sus gestiones.
            <a href="https://claveunica.gob.cl/" target="_blank">clave única.</a>
        </p>
    </div>
</div>
<div class="container my-3">
    @Html.Partial("_Message")
</div>

<div class="container my-3" id="supervisor">
    <div class="alert alert-primary" role="alert">
        <b>Importante: </b>Todos los documentos solicitados deben incluir firma electrónica avanzada
    </div>
    @if (ViewBag.errorMessage != null)
    {
        <div class="alert-danger alert alert-primary">
            @ViewBag.errorMessage
        </div>
    }
    @using (Html.BeginForm("Create", "SupervisorAuxiliar", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @*@Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.RutSolicitante)
            @Html.HiddenFor(model => model.NombresSolicitante)
            @Html.HiddenFor(model => model.ApellidosSolicitante)
            @Html.HiddenFor(model => model.RazonSocial)*@
        @Html.HiddenFor(m => m.SupervisorAuxiliarId)
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title font-weight-bold">Identificación</h5>
                        <hr />
                        <div class="form">
                            <div class="form-group">
                                @Html.LabelFor(m => m.RazonSocial, new { @class = "font-weight-bold control-label" })
                                @Html.EditorFor(m => m.RazonSocial, new { htmlAttributes = new { @class = "form-control col-12" } })
                            </div>
                            <div class="form-row">
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(m => m.TipoPersonaJuridicaId, new { @class = "font-weight-bold" })
                                    @Html.DropDownListFor(model => model.TipoPersonaJuridica.TipoPersonaJuridicaId, (SelectList)ViewBag.TipoPersonaJuridicaId, "Seleccione...", htmlAttributes: new { @class = "form-control col-12" })
                                </div>
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(m => m.Rut, new { @class = "font-weight-bold" })
                                    @Html.EditorFor(m => m.Rut, new { htmlAttributes = new { @class = "form-control col-12" } })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.DomicilioLegal, new { @class = "font-weight-bold" })
                                @Html.EditorFor(m => m.DomicilioLegal, new { htmlAttributes = new { @class = "form-control col-12" } })
                            </div>
                            <div class="form-row">
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(m => m.Telefono, new { @class = "font-weight-bold" })
                                    @Html.EditorFor(m => m.Telefono, new { htmlAttributes = new { @class = "form-control col-12" } })
                                </div>
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(m => m.CorreoElectronico, new { @class = "font-weight-bold" })
                                    @Html.EditorFor(m => m.CorreoElectronico, new { htmlAttributes = new { @class = "form-control col-12", @type = "email" } })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title font-weight-bold">Representantes Legales</h5>
                        @if (Model != null)
                        {
                            <div id="representantes">
                                @Html.Partial("_Representantes", Model)
                            </div>
                        }
                        @Ajax.ActionLink("Agregar Representante Legal", "RepresentanteAdd", null, new { Model.SupervisorAuxiliarId }, new AjaxOptions { UpdateTargetId = "representantes" })
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title font-weight-bold">Escritura de Constitución</h5>
                        @if (Model != null)
                        {
                            <div id="constitucion">
                                @Html.Partial("_Constitucion", Model)
                            </div>
                        }
                        <div class="card-body" id="modificaciones">
                            <h5 class="card-title font-weight-bold">Modificaciones</h5>
                            <hr />
                            @Ajax.ActionLink("Agregar Modificacion", "ConstitucionAdd", null, new { Model.SupervisorAuxiliarId }, new AjaxOptions { UpdateTargetId = "constitucion" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title font-weight-bold">Extracto</h5>
                        <div id="extracto">
                            <hr />
                            @Html.Partial("_Extracto", Model)
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title font-weight-bold">Personas Facultadas para firmar Informes de supervisión</h5>
                        @if (Model != null)
                        {
                            <div id="personasFacultadas">
                                @Html.Partial("_PersonasFacultadas", Model)
                            </div>
                        }
                        @Ajax.ActionLink("Agregar Persona Facultada", "PersonaFacultadaAdd", null, new { Model.SupervisorAuxiliarId }, new AjaxOptions { UpdateTargetId = "personasFacultadas" })
                    </div>
                </div>
                <br />
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-body">
                        <p class="card-title font-weight-bold font-weight-bold">Adjuntar Documentos</p>
                        <hr />
                        <ul>
                            <li class="card-title font-weight-bold text-info">
                                Adjunte documentos necesarios para este trámite
                            </li>
                        </ul>
                        <hr />

                        <div class="input_field">
                            <table id="table_field" class="table-bordered">
                                @Html.ValidationMessageFor(m => Model.DocumentoAdjuntoTest, "", new { @class = "text-danger" })
                                <tr>
                                    @Html.LabelFor(m => Model.DocumentoAdjuntoTest, "Seleccione un documento", new { @class = "font-weight-bold" })
                                    <td style="height:50px; padding-left: 10px">
                                        @Html.TextBoxFor(m => Model.DocumentoAdjuntoTest, null, new { @type = "file" })
                                    </td>
                                    <td style="min-width: 75px" class="text-center">
                                        <label class="text-danger" name="remove" id="re">Quitar</label>
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <hr />
                        <label class="text-primary" name="add" id="add">Agregar nuevo documento</label>

                    </div>
                    <div class="card-footer">
                        <small class="text-info">Solo se aceptan archivos en formato: pdf, word o excel</small>
                        <br />
                        <small class="text-danger">Tamaño máximo por cada archivo: 50 MB</small>
                    </div>
                </div>
            </div>
        </div>
        <br />

        <button class="btn btn-primary btn-rounded" type="submit">Enviar solicitud</button>


    }
</div>

<div class="container my-3">
    Volver al <a href='@Url.Action("Index", "DAES")'>DAES digital</a>
</div>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-149680284-32"></script>
<script type="text/javascript">
    $(document).ready(function () {
        window.dataLayer = window.dataLayer || [];
        function gtag() {
            dataLayer.push(arguments);
        }
        gtag('js', new Date());
        gtag('config', 'UA-149680284-32');
        gtag('event', 'Inicio de la solicitud', {
            'event_category': 'Trámite digital',
            'event_label': 'Trámite - ID 0800540005'
        });        
    });

    const MAXIMO_TAMANIO_BYTES = @ViewBag.max_tamano_file;
    var max = 10, x = 1, cont = 1;

    $("#add").click(function () {
        var wrapper = '<tr><td style="height:50px; padding-left: 10px"><input required="required" type="file" name="DocumentoAdjuntoTest" id="DocumentoAdjuntoTest' + cont + '" onChange="validar(' + cont + ')"/>' +
            '</td><br /><td class="text-center"><label class="text-danger" name="remove" id="remove">Quitar</label></td></tr>';

        if (x < max) {
            $("#table_field").append(wrapper);
            x++;
            cont++;
        }
    });

    $("#table_field").on('click', '#remove', function () {
        $(this).closest('tr').remove();
        x--;

    });

    $('#add').hide();
    $('#remove').hide();
    $('#re').hide();

    function validar(conta) {
        const archivo = document.getElementById('DocumentoAdjuntoTest' + conta).value;
        extension = archivo.substring(archivo.lastIndexOf('.'), archivo.length);
        //dandoll
        const DocumentoAdjuntadoDI = document.querySelector('#DocumentoAdjuntoTest' + conta).files[0];
        console.log(DocumentoAdjuntadoDI);

        if (DocumentoAdjuntadoDI.size > MAXIMO_TAMANIO_BYTES) {
            alert("El tamaño máximo es 50 MB por archivo");
            document.getElementById('DocumentoAdjuntoTest' + conta).value = "";
        }
        //if (document.getElementById('DocumentoAdjuntoTest' + conta).getAttribute('accept').split(',').indexOf(extension) < 0) {
        //    alert('Formato Incorrecto ' + extension + ' Solo se acpetan documentos de tipo Word, Excel o Pdf');
        //    document.getElementById('DocumentoAdjuntoTest' + conta).value = "";
        //    cont++;
        //}
    }

    $('#re').on("click", function () {
        const $DocumentoAdjuntoTest = document.querySelector("#DocumentoAdjuntoTest");
        $DocumentoAdjuntoTest.value = "";
        $('#add').hide();
        $('#re').hide();
    })

    const $DocumentoAdjuntoTest = document.querySelector("#DocumentoAdjuntoTest");
    $DocumentoAdjuntoTest.addEventListener("change", function () {
        $('#add').show();
        $('#remove').show();
        if (this.files.length <= 0) {
            $('#re').hide();
            return;
        } else {
            $('#re').show();
        }
        for (let i = 0; i < 10; i++) {
            const archivo = this.files[i];
            if (archivo.size > MAXIMO_TAMANIO_BYTES) {
                alert("El tamaño máximo es 50 MB por archivo");
                $DocumentoAdjuntoTest.value = "";
                $('#add').hide();
                $('#re').hide();
            }
            console.log(archivo);
        }
    });
</script>
<script async src="https://www.googletagmanager.com/gtag/js?id=G-V00WBXWJ83"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag() { dataLayer.push(arguments); }
    gtag('js', new Date());
    gtag('config', 'G-V00WBXWJ83');
    gtag('event', 'Inicio de la solicitud', {
        'event_category': 'Trámite digital',
        'event_label': 'Trámite - ID 0800540005'
    });
</script>