@model DAES.Model.DTO.DTOEstudioSocioeconomico

@{
    ViewBag.Title = "Create";

}

<div class="card">
    <div class="card-body">

        @using (Html.BeginForm("Create", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(model => model.RutSolicitante)
            @Html.HiddenFor(model => model.Apellidos)
            @Html.HiddenFor(model => model.Nombres)


            @Html.AntiForgeryToken()
            <div class="jumbotron" style="background-color:#e9ecef">
                <div class="container">
                    <h1>Estudio SocioEconómico CAC´S</h1>
                    <p>Permite inscribir el estudio socio-económico que deben presentar los interesados en constituir una cooperativa de ahorro y crédito</p>
                </div>
            </div>
            <div class="form-horizontal">
                <div class="container">
                    <p style="color:red">@ViewBag.ErrorMessage</p>
                    <div style="background-color:lightblue">
                        <p>Importante: Todos los documentos solicitados deben incluir firma electrónica avanzada.</p>
                    </div>
                </div>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="container">
                    <div class="row">
                        <div class="col-sm">
                            <div class="card">
                                <h5 class="card-title" align="center">Información de la organización</h5>
                                <p align="center">Complete los datos de la organización</p>
                                <hr />
                                <div class="card-body">
                                    @Html.LabelFor(model => model.TipoOrganizacionId, "*Tipo de Organización", htmlAttributes: new { @class = "control-label col-md-10" })
                                    @Html.DropDownList("TipoOrganizacionId", null, "Seleccione...", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TipoOrganizacionId, "", new { @class = "text-danger" })


                                    <br />
                                    @Html.LabelFor(model => model.RazonSocial, "*Razón social", htmlAttributes: new { @class = "control-label col-md-3" })
                                    @Html.EditorFor(model => model.RazonSocial, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(m => Model.RazonSocial, "", new { @class = "text-danger" })
                                    <table>

                                        <tr>
                                            <td>
                                                @Html.LabelFor(model => model.RubroId, "Rubro", htmlAttributes: new { @class = "control-label col-md-10" })
                                                @Html.DropDownList("RubroId", null, "Seleccione...", htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.RubroId, "", new { @class = "text-danger" })

                                            </td>
                                            <td>
                                                @Html.LabelFor(model => model.SubRubroId, "SubRubro", htmlAttributes: new { @class = "control-label col-md-10" })
                                                @Html.DropDownList("SubRubroId", null, "Seleccione...", htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.SubRubroId, "", new { @class = "text-danger" })

                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                @Html.LabelFor(model => model.RegionId, "*Region", htmlAttributes: new { @class = "control-label col-md-10" })
                                                @Html.DropDownList("RegionId", null, "Seleccione...", htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })
                                            </td>
                                            <td>
                                                @Html.LabelFor(model => model.ComunaId, "*Comuna", htmlAttributes: new { @class = "control-label col-md-10" })
                                                @Html.DropDownList("ComunaId", null, htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.ComunaId, "", new { @class = "text-danger" })
                                            </td>
                                        </tr>
                                        <tr>

                                            @Html.LabelFor(model => model.Direccion, "*Dirección", htmlAttributes: new { @class = "control-label col-md-10" })
                                            @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })

                                        </tr>
                                        <tr>
                                            <td>
                                                @Html.LabelFor(model => model.Rut, "Rut (Sin punto ni guión)", htmlAttributes: new { @class = "control-label col-md-12" })
                                                @Html.EditorFor(model => model.Rut, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Rut, "", new { @class = "text-danger" })
                                            </td>
                                            <td>
                                                @Html.LabelFor(model => model.Sigla, "Sigla", htmlAttributes: new { @class = "control-label col-md-12" })
                                                @Html.EditorFor(model => model.Sigla, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Sigla, "", new { @class = "text-danger" })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                @Html.LabelFor(model => model.Fono, "*Fono", htmlAttributes: new { @class = "control-label col-md-10" })
                                                @Html.EditorFor(model => model.Fono, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Fono, "", new { @class = "text-danger" })
                                            </td>
                                            <td>
                                                @Html.LabelFor(model => model.Email, "*Email", htmlAttributes: new { @class = "control-label col-md-10" })
                                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm">
                            <div class="card">
                                <h5 class="card-title" align="center">Información del solicitante</h5>
                                <p align="center">Complete los datos del solicitante</p>
                                <hr />
                                <div class="card-body">
                                    <div class="form-group">
                                        <table>
                                            <tr>
                                                <td>
                                                    @Html.LabelFor(model => model.RutSolicitante, "Rut del solicitante: ", htmlAttributes: new { @class = "font-weight-bold col-md-10" })
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(m => Model.RutSolicitante)
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    @Html.LabelFor(model => model.Apellidos, "Nombres del solicitante: ", htmlAttributes: new { @class = "font-weight-bold col-md-12" })
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(m => Model.Apellidos)
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    @Html.LabelFor(model => model.Nombres, "Apellidos del solicitante: ", htmlAttributes: new { @class = "font-weight-bold col-md-12" })
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(m => Model.Nombres)
                                                </td>
                                            </tr>
                                        </table>
                                        <br />

                                        @Html.LabelFor(model => model.MailSolicitante, "*Email", htmlAttributes: new { @class = "control-label col-md-4" })
                                        @Html.EditorFor(model => model.MailSolicitante, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.MailSolicitante, "", new { @class = "text-danger" })
                                        <br />

                                        @Html.LabelFor(model => model.RegionSolicitante, "*Región", htmlAttributes: new { @class = "control-label col-md-3" })
                                        @Html.DropDownList("RegionSolicitante", null, "Seleccione...", htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.RegionSolicitante, "", new { @class = "text-danger" })
                                        <br />

                                        @Html.LabelFor(model => model.FonoSolicitante, "*Fono (Solo números)", htmlAttributes: new { @class = "control-label col-md-8" })
                                        @Html.EditorFor(model => model.FonoSolicitante, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.FonoSolicitante, "", new { @class = "text-danger" })
                                        <br />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="container">
                    *Campos obligatorios
                </div>
                <br />
                <div class="container">
                    <div class="card">
                        <div class="input-field col s12 m12 l12">
                            <h5 class="card-title" align="center">Adjuntar documentos.</h5>
                            <div class="form-group" background-color:aliceblue" id="inputArchivo">
                                <div class="input_fields_wrap">
                                    <small>Puede seleccionar varios archivos para subir. Solo se aceptan archivos pdf, word, excel. </small>
                                    @Html.LabelFor(m => Model.DocumentoAdjunto, " ", new { @class = "font-weight-bold", @onchange="disabled" })<br /><br />
                                    <div>@Html.TextBoxFor(m => Model.DocumentoAdjunto, null, new { @multiple = "multiple", @type = "file" })<br /></div>
                                    <br />
                                    @Html.ValidationMessageFor(model => model.DocumentoAdjunto, "", new { @class = "text-danger" })

                                    <br />
                                </div>

                                @Html.LabelFor(model => model.Observacion, "Observación", htmlAttributes: new { @class = "control-label col-md-2" })
                                <br />

                                @Html.TextAreaFor(model => model.Observacion, 5, 50, new { htmlAttributes = new { @class = "form-control" } })
                                <br />

                                <button class="btn btn-primary my-3" type="submit" id="sendButton">Enviar estudio</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        }

        <div>
            @Html.ActionLink("   volver a DAES", "Index", "Home")
        </div>

    </div>
</div>



<script type="text/javascript">


    $('#RubroId').on('change', function () {
        var RubroId = $(this).val();
        $.getJSON("/Organizacion/GetSubRubro", { RubroId: RubroId },
            function (classesData) {
                var select = $("#SubRubroId");
                select.empty();
                select.append($('<option/>', {
                    value: 0,
                    text: "Seleccione..."
                }));
                $.each(classesData, function (index, itemData) {
                    select.append($('<option/>', {
                        value: itemData.Value,
                        text: itemData.Text
                    }));
                });
            });
    });

    $('#RegionId').on('change', function () {
        var RegionId = $(this).val();
        $.getJSON("/Organizacion/GetComuna", { RegionId: RegionId },
            function (classesData) {
                var select = $("#ComunaId");
                select.empty();
                $.each(classesData, function (index, itemData) {
                    select.append($('<option/>', {
                        value: itemData.Value,
                        text: itemData.Text
                    }));
                });
            });
    });


    //Dropdown siempre en cooperativa
    $('#TipoOrganizacionId option[value="1"]').attr("selected", true);
    $("#TipoOrganizacionId").prop("disabled", true);

    //Para que el input de FonoSolicitante solo acepte numeros.
    $('#FonoSolicitante').on('input', function () {
        this.value = this.value.replace(/[^0-9]/g, '');
    });

    //$('#RegionId').prop('selectedIndex', 0);



    const MAXIMO_TAMANIO_BYTES = @ViewBag.max_tamano_file; // en bytes //52428800;
    // Obtener referencia al elemento
    const $DocumentoAdjunto = document.querySelector("#DocumentoAdjunto");

    $DocumentoAdjunto.addEventListener("change", function () {
        // si no hay archivos, regresamos
        if (this.files.length <= 0) return;

        // Validamos los archivo
        for (let i = 0; i < 10; i++) {
            const archivo = this.files[i];
            if (archivo.size > MAXIMO_TAMANIO_BYTES) {
                alert("El tamaño máximo es 50 MB por archivo");
                // Limpiar
                $DocumentoAdjunto.value = "";
            }else {
                //alert('Tamaño del archivo correcto')
            }
        }

    });
</script>