@model DAES.Model.DTO.DTOEstudioSocioeconomico

@{
    ViewBag.Title = "Create";

}

<div class="jumbotron">
    <div class="container">
        <h1 class="display-4">Estudio SocioEconómico CAC´S</h1>
        <p>Permite inscribir el estudio socio-económico que deben presentar los interesados en constituir una cooperativa de ahorro y crédito</p>
    </div>
</div>
<div class="container my-3">
    @if (ViewBag.ErrorMessage != null)
    {
        <p style="color:red" class=" alert alert-danger text-center">@ViewBag.ErrorMessage</p>
    }

    <div class="alert alert-primary" role="alert">
        <b>Importante: </b>Todos los documentos solicitados deben incluir firma electrónica avanzada
    </div>
</div>

<div class="container my-3">
    @using (Html.BeginForm("Create", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(model => model.RutSolicitante)
        @Html.HiddenFor(model => model.Nombres)
        @Html.HiddenFor(model => model.Apellidos)
        @Html.AntiForgeryToken()

        <p class="text-danger text-center">*Campo Obligatorio</p>
        <hr />
        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col">
                                <h5 class="card-title text-center">Datos Organización</h5>
                                <p class="card-title text-info text-center">Ingrese los datos pertenecientes a la organización</p>
                                <hr />
                                <div class="card-body">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.TipoOrganizacionId, new { @class = "font-weight-bold" })
                                        @Html.DropDownList("TipoOrganizacionId", null, "Seleccione...", htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.TipoOrganizacionId, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.RazonSocial, new { @class = "font-weight-bold" })
                                        @Html.EditorFor(model => model.RazonSocial, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.RazonSocial, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Direccion, new { @class = "font-weight-bold" })
                                        @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="row">
                                        <div class="col">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.RubroId, new { @class = "font-weight-bold" })
                                                @Html.DropDownListFor(model => model.RubroId, null, "Seleccione...", htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.RubroId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.SubRubroId, new { @class = "font-weight-bold"})
                                                @Html.DropDownListFor(model => model.SubRubroId, null, "Seleccione...", htmlAttributes: new { @class = "form-control"})
                                                @Html.ValidationMessageFor(model => model.SubRubroId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col">

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.RegionId, new { @class = "font-weight-bold" })
                                                @Html.DropDownListFor(model => model.RegionId, null, "Seleccione...", htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.ComunaId, new { @class = "font-weight-bold" })
                                                @Html.DropDownListFor(model => model.ComunaId, null, "Seleccione...", htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.ComunaId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Rut, new { @class = "font-weight-bold" })
                                                @Html.EditorFor(model => model.Rut, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Rut, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Sigla, new { @class = "font-weight-bold" })
                                                @Html.EditorFor(model => model.Sigla, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Sigla, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Fono, new { @class = "font-weight-bold" })
                                        @Html.EditorFor(model => model.Fono, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Fono, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Email, new { @class = "font-weight-bold" })
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-6">
                <div class="card">
                    <div class="card-body">
                        <div class="col">
                            <h5 class="card-title text-center">Datos Solicitante</h5>
                            <p class="card-title text-info text-center">Ingrese los datos pertenecientes al solicitante</p>
                            <hr />
                            <div class="form-group">
                                @Html.LabelFor(m => Model.RutSolicitante, new { @class = "font-weight-bold" })
                                @Html.DisplayFor(m => Model.RutSolicitante)

                                <br />
                                @Html.LabelFor(m => Model.Nombres, new { @class = "font-weight-bold" })
                                @Html.DisplayFor(m => Model.Nombres)

                                <br />
                                @Html.LabelFor(m => Model.Apellidos, new { @class = "font-weight-bold" })
                                @Html.DisplayFor(m => Model.Apellidos)

                            </div>

                                        @Html.LabelFor(model => model.FonoSolicitante, "*Fono (Solo números)", htmlAttributes: new { @class = "control-label col-md-8" })
                                        @Html.EditorFor(model => model.FonoSolicitante, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.FonoSolicitante, "", new { @class = "text-danger" })
                                        <br />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="container">
                    *Campos obligatorios
                </div>
                <br />
                <div class="container">
                    <div class="card">
                        <div class="input-field col s12 m12 l12">
                            <h5 class="card-title" align="center">Adjuntar documentos.</h5>
                            <div class="form-group" background-color:aliceblue" id="inputArchivo">
                                <div class="input_fields_wrap">
                                    <small>Puede seleccionar varios archivos para subir. Solo se aceptan archivos pdf, word, excel. </small>
                                    @Html.LabelFor(m => Model.DocumentoAdjunto, " ", new { @class = "font-weight-bold", @onchange="disabled" })<br /><br />
                                    <div>@Html.TextBoxFor(m => Model.DocumentoAdjunto, null, new { @multiple = "multiple", @type = "file" })<br /></div>
                                    <br />
                                    @Html.ValidationMessageFor(model => model.DocumentoAdjunto, "", new { @class = "text-danger" })

                                <div class="input_field">
                                    <table id="table_field" class="table-bordered">
                                        @Html.ValidationMessageFor(m => Model.DocumentoAdjunto, "", new { @class = "text-danger" })
                                        <tr>
                                            <td style="height:50px; padding-left: 10px">
                                                @Html.LabelFor(m => Model.DocumentoAdjunto, "Seleccione un documento", new { @class = "font-weight-bold" })
                                                @Html.TextBoxFor(m => Model.DocumentoAdjunto, null, new { @type = "file" })
                                            </td>
                                            <td style="min-width: 75px" class="text-center">
                                                <label class="text-danger" name="remove" id="re">Quitar</label>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                                <hr />
                                <label class="text-primary" name="add" id="add">Agregar nuevo documento</label>

                            </div>
                            <div class="card-footer">
                                <small class="text-info">Solo se aceptan archivos en formato: pdf, word o excel</small>
                                <br />
                                <small class="text-danger">Tamaño máximo por cada archivo: 50 MB</small>
                            </div>
                        </div>
                    </div>
                    <div class="col">
                        <div class="card">
                            <div class="card-body" style="min-height: 335px">
                                <p class="card-title text-center font-weight-bold">Observaciones</p>
                                <hr />
                                <ul>
                                    <li class="card-title text-info">
                                        Agregar observaciones
                                    </li>
                                </ul>
                                <hr />
                                <div class="form-group ">
                                    @Html.LabelFor(m => m.Observacion, new { @class = "font-weight-bold" })
                                    @Html.TextAreaFor(m => m.Observacion, 5, 65, new { htmlAtributtes = new { @class = "form-control" } })
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
                <br />
            </div>

        </div>

        <button class="btn btn-primary my-3" type="submit">Enviar solicitud</button>
    }
</div>

<div class="container my-3">
    Volver al <a href='@Url.Action("Index", "DAES")'>DAES digital</a>
</div>



<script type="text/javascript">


    $('#TipoOrganizacionId option[value="1"]').attr("selected", true);
    $("#TipoOrganizacionId").prop("disabled", true);



    $('#RubroId option[value="6"]').attr("selected", true);
    $("#RubroId").prop("disabled", true);
    $('#SubRubroId option[value="15"]').attr("selected", true);
    $("#SubRubroId").prop("disabled", true);


    //$('#RegionId').prop('selectedIndex', 0);



    if (x < max) {
    $("#table_field").append(wrapper);
    x++, cont++;
    }
    })
    //Eliminar fila cuando se hace click en quitar
    $("#table_field").on('click', '#remove', function () {
    $(this).closest('tr').remove();
    x--;
    })
    //Validar tamaño de documento dinamico
    function validar(conta) {
    const DocumentoAdjuntadoDI = document.querySelector('#DocumentoAdjunto' + conta).files[0];
    if (DocumentoAdjuntadoDI.size > MAXIMO_TAMANIO_BYTES) {
    alert("El tamaño máximo es 50 MB por archivo");
    document.getElementById('DocumentoAdjunto' + conta).value = "";
    }
    }
    //Limpiar input documento sin quitarlo
    $('#re').on("click", function () {
    const $DocumentoAdjunto = document.querySelector("#DocumentoAdjunto");
    $DocumentoAdjunto.value = "";
    })
    //Validar tamaño documento
    const $DocumentoAdjunto = document.querySelector("#DocumentoAdjunto");
    $DocumentoAdjunto.addEventListener("change", function () {
    const archivo = this.files[0];
    if (archivo.size > MAXIMO_TAMANIO_BYTES) {
    alert("El tamaño máximo es 50 MB por archivo");
    $DocumentoAdjunto.value = "";
    }
    });
</script>
